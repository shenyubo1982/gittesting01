import re

from PythonDemo0004 import showlinefeed

## 1.findall
# 使用findall方法，能够以列表的形式返回所有满足要求的字符串。
# re.findall(pattern,string,flags=0)
# pattern:表示正则表达式，string表示原来的字符串，flags表示一些特殊功能的标志
# 结果是一个列表，包含了所有匹配到的结果，如果没有匹配到，就返回空列表
# ,
## sample 01
content1 ='我的密码是：1234567，QQ密码是：33445566，银行卡密码是：88888888，bithub密码是：11111abc111，请帮我记住他们'
content2 ='我的电脑账号是：abc，密码是：1234567，QQ账号是：123，密码是：33445566，银行卡账号是：sss12344，密码是：88888888，bithub账号是aaa@163.com，密码是：11111abc111，请帮我记住他们'


pwdlist1 = re.findall('：(.*?)，',content1)
showlinefeed(pwdlist1)

#sample 02
pwdlist2 = re.findall('账号是：(.*?)，密码是：(.*?)，',content2)
showlinefeed(pwdlist2)


##补充说明：
## 函数参数中有一个flgs参数，如果不省略，具有一些辅助功能，
## 例如：忽略大小写、忽略换行符，如果要忽略换行符可以使用 re.S这个参数

##2.search
## search 与findall的用法一样，但是search()只会返回第一个满足条件的字符串
## 一旦找到符合要求的内容，他就会停止查询。对于超级大的文本里面，
## 只找第一个数据特别有用，可以提高运行效率
## 对于结果，如果匹配成功，则是一个正则表达式的对象；
## 如果没有匹配到任何数据，就是None
## 如果需要得到匹配的结果，则需要通过.group()这个方法来获取里面的数值。
## 只有在.group()里面的参数为1的时候，才会把正则表达式里面的
##括号中的结果打印出来。
## .group()的参数最大不能超过正则表达式里面括号的个数。
## 参数为1表示读取第一个括号中的内容，参数为2表示读取第2个括号中的内容，以此类推。


#sample03
pwdlist3 = re.search('账号是：(.*?)，密码是：(.*?)，',content2)
print("读取第一个括号的内容：", pwdlist3.group(1))
print("读取第二个括号的内容：", pwdlist3.group(2))



## 3. ".*" 和 ".*?"的区别
## 在爬虫开发中，.*?这三个符号大多数情况下一起使用。
#  .*表示匹配一串任意长度的字符串任意次。
#  这个时候，必须在.*的前面加其他的符号来限定范围，否则得到的就是整个字符串。
#  ".*"是贪婪模式，获取最长的满足条件的字符串
#  如果.*?就是匹配一个能满足要求的最短字符串。
#  ".*?"是非贪婪模式，获取最短的能满足条件的字符串。
#  举例：10个人肩并肩并排站着，使用"(.*)"取到了第一个人左手到第10个人右手之间的所有东西，
#  而使用"(.*?)"取到的是'每个人'的左右和右手之间的东西
#  问号表示匹配他前面的符号0次或1次，
# ，


